<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>systems.enji</groupId>
  <artifactId>runeemon-cargo</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <packaging>war</packaging>

  <properties>

    <!-- directory that the containers will be downloaded and extracted to; 
         configure a central directory if you don't want them to be extracted inside every single project -->
    <nest.dir>${project.build.directory}/nest</nest.dir>
    <zoo.dir>${project.build.directory}/zoo</zoo.dir>

    <!-- container versions -->
    <openliberty.version>21.0.0.2</openliberty.version>
    <payara.version>5.2021.1</payara.version>
    <tomee.version>8.0.6</tomee.version>
    <wildfly.version>23.0.0.Final</wildfly.version>

    <!-- Maven plugin versions -->
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
    <cargo-maven3-plugin.version>1.9.3</cargo-maven3-plugin.version>

  </properties>

  <dependencies>

    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>8.0.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- test dependencies -->

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client-microprofile</artifactId>
      <version>4.5.8.Final</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
  
    <finalName>ping</finalName>

    <plugins>
    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <!-- we exclude the tests here because we have to start the container first... -->
          <excludes>
            <exclude>**/*.java</exclude>
          </excludes>
        </configuration>
        <!-- ...and now we include the tests again for the integration test phase (when the container is running) -->
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- takes care of download, deployment, startup, and shutdown -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven3-plugin</artifactId>
        <version>${cargo-maven3-plugin.version}</version>
        <!-- automatically start the server before the integration tests (and stop it afterwards) -->
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
                
    </plugins>
    
  </build>

  <profiles>

    <profile>
    
      <id>openliberty</id>
      
      <properties>
        <container.home>${zoo.dir}/wlp</container.home>
      </properties>
      
      <build>
        <plugins>
          
          <!-- takes care of downloading and extracting the container;
               better than the cargo downloader because Maven coordinates are more stable than a custom download URL -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven-dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>io.openliberty</groupId>
                      <artifactId>openliberty-runtime</artifactId>
                      <version>${openliberty.version}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${zoo.dir}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${cargo-maven3-plugin.version}</version>
            <configuration>
              <container>
                <!-- there is no separate ID for OpenLiberty, so we use the one for "WebSphere Liberty" -->
                <containerId>liberty</containerId>
                <home>${container.home}</home>
              </container>
              <configuration>
                <!-- cargo does not support "existing" for liberty, so we use "standalone" -->
                <type>standalone</type>
                <home>${container.home}/usr</home>
                <!-- the server.xml of the "openliberty-runtime" artifact is lacking the JEE feature -->
                <xmlReplacements>
                  <xmlReplacement>
                    <file>servers/defaultServer/server.xml</file>
                    <xpathExpression>/server/featureManager/feature</xpathExpression>
                    <value>jakartaee-8.0</value>
                  </xmlReplacement>
                </xmlReplacements>
              </configuration>
            </configuration>
          </plugin>
          
        </plugins>
      </build>
    </profile>
  
    <profile>
    
      <id>payara</id>
      
      <properties>
        <container.home>${zoo.dir}/payara5</container.home>
      </properties>
      
      <build>
        <plugins>
          
          <!-- takes care of downloading and extracting the container;
               better than the cargo downloader because Maven coordinates are more stable than a custom download URL -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven-dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>fish.payara.distributions</groupId>
                      <artifactId>payara</artifactId>
                      <version>${payara.version}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${zoo.dir}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${cargo-maven3-plugin.version}</version>
            <configuration>
              <container>
                <containerId>payara</containerId>
                <home>${container.home}</home>
              </container>
              <configuration>
                <type>existing</type>
                <home>${container.home}/glassfish/domains</home>
                <properties>
                  <cargo.glassfish.domain.name>domain1</cargo.glassfish.domain.name>
                  <cargo.remote.password></cargo.remote.password>
                </properties>
              </configuration>
            </configuration>
          </plugin>
          
        </plugins>
      </build>
    </profile>

    <profile>
    
      <id>tomee</id>
      
      <properties>
        <container.home>${zoo.dir}/apache-tomee-${tomee.version}-plume/apache-tomee-plume-${tomee.version}</container.home>
      </properties>
      
      <build>
        <plugins>
          
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${cargo-maven3-plugin.version}</version>
            <configuration>
              <container>
                <containerId>tomee8x</containerId>
                <zipUrlInstaller>
                  <url>https://mirror.klaus-uwe.me/apache/tomee/tomee-8.0.6/apache-tomee-8.0.6-plume.zip</url>
                  <downloadDir>${nest.dir}</downloadDir>
                  <extractDir>${zoo.dir}</extractDir>
                </zipUrlInstaller>
              </container>
              <configuration>
                <type>existing</type>
                <home>${container.home}</home>
              </configuration>
            </configuration>
          </plugin>
          
        </plugins>
      </build>
    </profile>
        
    <profile>
    
      <id>wildfly</id>
      
      <properties>
        <container.home>${zoo.dir}/wildfly-${wildfly.version}/wildfly-${wildfly.version}</container.home>
      </properties>
      
      <build>
        <plugins>
          
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${cargo-maven3-plugin.version}</version>
            <configuration>
              <container>
                <!-- currently, there is no newer ID (but still works for newer versions) -->
                <containerId>wildfly23x</containerId>
                <zipUrlInstaller>
                  <url>https://download.jboss.org/wildfly/${wildfly.version}/wildfly-${wildfly.version}.zip</url>
                  <downloadDir>${nest.dir}</downloadDir>
                  <extractDir>${zoo.dir}</extractDir>
                </zipUrlInstaller>
              </container>
              <configuration>
                <type>existing</type>
                <home>${container.home}/standalone</home>
              </configuration>
            </configuration>
          </plugin>
          
        </plugins>
      </build>
    </profile>
        
  </profiles>

</project>